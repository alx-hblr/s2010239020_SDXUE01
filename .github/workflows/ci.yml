name: ci

on:
  push:
    branches:
      - "main"
env:
  TEST_TAG: alxhblr/app:test
  LATEST_TAG: alxhblr/s2010239020_sdxue01/general:latest
  
jobs:
  setup-buildx:
    name: Setup Buildx Environment
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  lint-build:
    name: Lint Go and Dockerfile & Build Docker Image
    runs-on: ubuntu-latest
    needs: setup-buildx
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51
          working-directory: src
      - name: dockerlint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: dockerfile
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.TEST_TAG }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Run the application and database
        run: |
          docker compose up -d
      - name: Run python test file
        run: |
          python3 ./api-test-example.py
      - name: Shutdown docker
        run: |
          docker compose down
      - name: Check builder driver
        run: docker buildx inspect --bootstrap
      - name: Create and use builder instance
        run: |
          docker buildx create --name mybuilder --use
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
